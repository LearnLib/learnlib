<?xml version="1.0"?>
<!--
Copyright (C) 2013-2025 TU Dortmund University
This file is part of LearnLib <https://learnlib.de>.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>de.learnlib</groupId>
        <artifactId>learnlib-algorithms-active-parent</artifactId>
        <version>0.19.0-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <artifactId>learnlib-lambda</artifactId>

    <name>LearnLib :: Algorithms :: Lambda</name>
    <description>
        This artifact provides the implementations of various learning algorithms based on the "lazy partition refinement"
        concept as described in the paper "Active Automata Learning as Black-Box Search and Lazy Partition Refinement"
        (https://doi.org/10.1007/978-3-031-15629-8_17) by Falk Howar and Bernhard Steffen.
    </description>

    <dependencies>
        <!-- internal -->
        <dependency>
            <groupId>de.learnlib</groupId>
            <artifactId>learnlib-api</artifactId>
        </dependency>
        <dependency>
            <groupId>de.learnlib</groupId>
            <artifactId>learnlib-util</artifactId>
        </dependency>

        <!-- external -->
        <dependency>
            <groupId>net.automatalib</groupId>
            <artifactId>automata-api</artifactId>
        </dependency>
        <dependency>
            <groupId>net.automatalib</groupId>
            <artifactId>automata-commons-util</artifactId>
        </dependency>
        <dependency>
            <groupId>net.automatalib</groupId>
            <artifactId>automata-core</artifactId>
        </dependency>

        <dependency>
            <groupId>org.checkerframework</groupId>
            <artifactId>checker-qual</artifactId>
        </dependency>

        <!-- test -->
        <dependency>
            <groupId>de.learnlib</groupId>
            <artifactId>learnlib-drivers-simulator</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>de.learnlib</groupId>
            <artifactId>learnlib-equivalence-oracles</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>de.learnlib</groupId>
            <artifactId>learnlib-membership-oracles</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>de.learnlib.testsupport</groupId>
            <artifactId>learnlib-learner-it-support</artifactId>
        </dependency>
        <dependency>
            <groupId>de.learnlib.testsupport</groupId>
            <artifactId>learnlib-learning-examples</artifactId>
        </dependency>
        <dependency>
            <groupId>de.learnlib.testsupport</groupId>
            <artifactId>learnlib-test-support</artifactId>
        </dependency>

        <dependency>
            <groupId>net.automatalib</groupId>
            <artifactId>automata-serialization-dot</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>net.automatalib</groupId>
            <artifactId>automata-util</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <configuration>
                        <!-- append to existing argLine to nicely work together with jacoco plugin -->
                        <argLine>@{argLine} --add-reads=de.learnlib.algorithm.lambda=net.automatalib.util</argLine>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <configuration>
                        <!-- append to existing argLine to nicely work together with jacoco plugin -->
                        <argLine>@{argLine} --add-reads=de.learnlib.algorithm.lambda=net.automatalib.util</argLine>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>

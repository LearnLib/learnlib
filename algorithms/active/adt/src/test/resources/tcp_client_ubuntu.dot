/* File is from https://gitlab.com/felixwallner/learn-combinations/-/tree/master/input/mealy/principle/BenchmarkTCP */
digraph G {
	__start0 [label="" shape="none"];
	s0 [shape="circle" label="s0"];
	s0 -> s0[label="ACK+RST(V,V,0)/TIMEOUT"];
	s0 -> s1[label="CLOSE/TIMEOUT"];
	s0 -> s2[label="CONNECT/SYN(FRESH,ZERO,0)"];
	s0 -> s0[label="ACK+PSH(V,V,1)/RST(ZERO,ZERO,0)"];
	s0 -> s0[label="SYN+ACK(V,V,0)/RST(ZERO,ZERO,0)"];
	s0 -> s0[label="RST(V,V,0)/TIMEOUT"];
	s0 -> s0[label="ACK(V,V,0)/RST(ZERO,ZERO,0)"];
	s0 -> s0[label="FIN+ACK(V,V,0)/RST(ZERO,ZERO,0)"];
	s0 -> s0[label="SYN(V,V,0)/ACK+RST(ZERO,NEXT,0)"];
	s0 -> s0[label="RCV/TIMEOUT"];
	s1 [shape="circle" label="s1"];
	s1 -> s1[label="ACK+RST(V,V,0)/TIMEOUT"];
	s1 -> s1[label="CLOSE/TIMEOUT"];
	s1 -> s1[label="CONNECT/TIMEOUT"];
	s1 -> s1[label="ACK+PSH(V,V,1)/RST(ZERO,ZERO,0)"];
	s1 -> s1[label="SYN+ACK(V,V,0)/RST(ZERO,ZERO,0)"];
	s1 -> s1[label="RST(V,V,0)/TIMEOUT"];
	s1 -> s1[label="ACK(V,V,0)/RST(ZERO,ZERO,0)"];
	s1 -> s1[label="FIN+ACK(V,V,0)/RST(ZERO,ZERO,0)"];
	s1 -> s1[label="SYN(V,V,0)/ACK+RST(ZERO,NEXT,0)"];
	s1 -> s1[label="RCV/TIMEOUT"];
	s2 [shape="circle" label="s2"];
	s2 -> s1[label="ACK+RST(V,V,0)/TIMEOUT"];
	s2 -> s5[label="CLOSE/TIMEOUT"];
	s2 -> s2[label="CONNECT/TIMEOUT"];
	s2 -> s2[label="ACK+PSH(V,V,1)/TIMEOUT"];
	s2 -> s4[label="SYN+ACK(V,V,0)/ACK(NEXT,NEXT,0)"];
	s2 -> s6[label="RST(V,V,0)/TIMEOUT"];
	s2 -> s2[label="ACK(V,V,0)/TIMEOUT"];
	s2 -> s2[label="FIN+ACK(V,V,0)/TIMEOUT"];
	s2 -> s3[label="SYN(V,V,0)/ACK+SYN(CURRENT,NEXT,0)"];
	s2 -> s2[label="RCV/TIMEOUT"];
	s3 [shape="circle" label="s3"];
	s3 -> s1[label="ACK+RST(V,V,0)/TIMEOUT"];
	s3 -> s8[label="CLOSE/ACK+FIN(NEXT,CURRENT,0)"];
	s3 -> s3[label="CONNECT/TIMEOUT"];
	s3 -> s7[label="ACK+PSH(V,V,1)/ACK(NEXT,NEXT,0)"];
	s3 -> s3[label="SYN+ACK(V,V,0)/ACK(NEXT,CURRENT,0)"];
	s3 -> s1[label="RST(V,V,0)/TIMEOUT"];
	s3 -> s4[label="ACK(V,V,0)/TIMEOUT"];
	s3 -> s9[label="FIN+ACK(V,V,0)/ACK(NEXT,NEXT,0)"];
	s3 -> s3[label="SYN(V,V,0)/TIMEOUT"];
	s3 -> s3[label="RCV/TIMEOUT"];
	s4 [shape="circle" label="s4"];
	s4 -> s1[label="ACK+RST(V,V,0)/TIMEOUT"];
	s4 -> s8[label="CLOSE/ACK+FIN(NEXT,CURRENT,0)"];
	s4 -> s4[label="CONNECT/TIMEOUT"];
	s4 -> s7[label="ACK+PSH(V,V,1)/ACK(NEXT,NEXT,0)"];
	s4 -> s4[label="SYN+ACK(V,V,0)/ACK(NEXT,CURRENT,0)"];
	s4 -> s1[label="RST(V,V,0)/TIMEOUT"];
	s4 -> s4[label="ACK(V,V,0)/TIMEOUT"];
	s4 -> s9[label="FIN+ACK(V,V,0)/ACK(NEXT,NEXT,0)"];
	s4 -> s4[label="SYN(V,V,0)/TIMEOUT"];
	s4 -> s10[label="RCV/TIMEOUT"];
	s5 [shape="circle" label="s5"];
	s5 -> s1[label="ACK+RST(V,V,0)/TIMEOUT"];
	s5 -> s5[label="CLOSE/TIMEOUT"];
	s5 -> s5[label="CONNECT/TIMEOUT"];
	s5 -> s1[label="ACK+PSH(V,V,1)/RST(NEXT,ZERO,0)"];
	s5 -> s1[label="SYN+ACK(V,V,0)/RST(NEXT,ZERO,0)"];
	s5 -> s1[label="RST(V,V,0)/TIMEOUT"];
	s5 -> s1[label="ACK(V,V,0)/RST(NEXT,ZERO,0)"];
	s5 -> s1[label="FIN+ACK(V,V,0)/RST(NEXT,ZERO,0)"];
	s5 -> s1[label="SYN(V,V,0)/ACK+RST(ZERO,NEXT,0)"];
	s5 -> s5[label="RCV/TIMEOUT"];
	s6 [shape="circle" label="s6"];
	s6 -> s6[label="ACK+RST(V,V,0)/TIMEOUT"];
	s6 -> s1[label="CLOSE/TIMEOUT"];
	s6 -> s6[label="CONNECT/TIMEOUT"];
	s6 -> s6[label="ACK+PSH(V,V,1)/RST(ZERO,ZERO,0)"];
	s6 -> s6[label="SYN+ACK(V,V,0)/RST(ZERO,ZERO,0)"];
	s6 -> s6[label="RST(V,V,0)/TIMEOUT"];
	s6 -> s6[label="ACK(V,V,0)/RST(ZERO,ZERO,0)"];
	s6 -> s6[label="FIN+ACK(V,V,0)/RST(ZERO,ZERO,0)"];
	s6 -> s3[label="SYN(V,V,0)/ACK+SYN(FRESH,NEXT,0)"];
	s6 -> s6[label="RCV/TIMEOUT"];
	s7 [shape="circle" label="s7"];
	s7 -> s1[label="ACK+RST(V,V,0)/TIMEOUT"];
	s7 -> s1[label="CLOSE/ACK+RST(NEXT,CURRENT,0)"];
	s7 -> s7[label="CONNECT/TIMEOUT"];
	s7 -> s7[label="ACK+PSH(V,V,1)/ACK(NEXT,NEXT,0)"];
	s7 -> s7[label="SYN+ACK(V,V,0)/ACK(NEXT,CURRENT,0)"];
	s7 -> s1[label="RST(V,V,0)/TIMEOUT"];
	s7 -> s7[label="ACK(V,V,0)/TIMEOUT"];
	s7 -> s11[label="FIN+ACK(V,V,0)/ACK(NEXT,NEXT,0)"];
	s7 -> s7[label="SYN(V,V,0)/TIMEOUT"];
	s7 -> s4[label="RCV/TIMEOUT"];
	s8 [shape="circle" label="s8"];
	s8 -> s1[label="ACK+RST(V,V,0)/TIMEOUT"];
	s8 -> s8[label="CLOSE/TIMEOUT"];
	s8 -> s8[label="CONNECT/TIMEOUT"];
	s8 -> s1[label="ACK+PSH(V,V,1)/RST(NEXT,ZERO,0)"];
	s8 -> s8[label="SYN+ACK(V,V,0)/ACK(NEXT,CURRENT,0)"];
	s8 -> s1[label="RST(V,V,0)/TIMEOUT"];
	s8 -> s12[label="ACK(V,V,0)/TIMEOUT"];
	s8 -> s13[label="FIN+ACK(V,V,0)/ACK(NEXT,NEXT,0)"];
	s8 -> s8[label="SYN(V,V,0)/TIMEOUT"];
	s8 -> s8[label="RCV/TIMEOUT"];
	s9 [shape="circle" label="s9"];
	s9 -> s1[label="ACK+RST(V,V,0)/TIMEOUT"];
	s9 -> s14[label="CLOSE/ACK+FIN(NEXT,CURRENT,0)"];
	s9 -> s9[label="CONNECT/TIMEOUT"];
	s9 -> s9[label="ACK+PSH(V,V,1)/TIMEOUT"];
	s9 -> s9[label="SYN+ACK(V,V,0)/ACK(NEXT,CURRENT,0)"];
	s9 -> s1[label="RST(V,V,0)/TIMEOUT"];
	s9 -> s9[label="ACK(V,V,0)/TIMEOUT"];
	s9 -> s9[label="FIN+ACK(V,V,0)/TIMEOUT"];
	s9 -> s9[label="SYN(V,V,0)/TIMEOUT"];
	s9 -> s9[label="RCV/TIMEOUT"];
	s10 [shape="circle" label="s10"];
	s10 -> s1[label="ACK+RST(V,V,0)/TIMEOUT"];
	s10 -> s8[label="CLOSE/ACK+FIN(NEXT,CURRENT,0)"];
	s10 -> s10[label="CONNECT/TIMEOUT"];
	s10 -> s4[label="ACK+PSH(V,V,1)/ACK(NEXT,NEXT,0)"];
	s10 -> s10[label="SYN+ACK(V,V,0)/ACK(NEXT,CURRENT,0)"];
	s10 -> s1[label="RST(V,V,0)/TIMEOUT"];
	s10 -> s10[label="ACK(V,V,0)/TIMEOUT"];
	s10 -> s9[label="FIN+ACK(V,V,0)/ACK(NEXT,NEXT,0)"];
	s10 -> s10[label="SYN(V,V,0)/TIMEOUT"];
	s10 -> s10[label="RCV/TIMEOUT"];
	s11 [shape="circle" label="s11"];
	s11 -> s1[label="ACK+RST(V,V,0)/TIMEOUT"];
	s11 -> s1[label="CLOSE/ACK+RST(NEXT,CURRENT,0)"];
	s11 -> s11[label="CONNECT/TIMEOUT"];
	s11 -> s11[label="ACK+PSH(V,V,1)/TIMEOUT"];
	s11 -> s11[label="SYN+ACK(V,V,0)/ACK(NEXT,CURRENT,0)"];
	s11 -> s1[label="RST(V,V,0)/TIMEOUT"];
	s11 -> s11[label="ACK(V,V,0)/TIMEOUT"];
	s11 -> s11[label="FIN+ACK(V,V,0)/TIMEOUT"];
	s11 -> s11[label="SYN(V,V,0)/TIMEOUT"];
	s11 -> s9[label="RCV/TIMEOUT"];
	s12 [shape="circle" label="s12"];
	s12 -> s1[label="ACK+RST(V,V,0)/TIMEOUT"];
	s12 -> s12[label="CLOSE/TIMEOUT"];
	s12 -> s12[label="CONNECT/TIMEOUT"];
	s12 -> s1[label="ACK+PSH(V,V,1)/RST(NEXT,ZERO,0)"];
	s12 -> s1[label="SYN+ACK(V,V,0)/RST(NEXT,ZERO,0)"];
	s12 -> s1[label="RST(V,V,0)/TIMEOUT"];
	s12 -> s12[label="ACK(V,V,0)/TIMEOUT"];
	s12 -> s13[label="FIN+ACK(V,V,0)/ACK(NEXT,NEXT,0)"];
	s12 -> s1[label="SYN(V,V,0)/ACK+RST(ZERO,NEXT,0)"];
	s12 -> s12[label="RCV/TIMEOUT"];
	s13 [shape="circle" label="s13"];
	s13 -> s1[label="ACK+RST(V,V,0)/TIMEOUT"];
	s13 -> s13[label="CLOSE/TIMEOUT"];
	s13 -> s13[label="CONNECT/TIMEOUT"];
	s13 -> s13[label="ACK+PSH(V,V,1)/ACK(NEXT,CURRENT,0)"];
	s13 -> s13[label="SYN+ACK(V,V,0)/ACK(NEXT,CURRENT,0)"];
	s13 -> s1[label="RST(V,V,0)/TIMEOUT"];
	s13 -> s13[label="ACK(V,V,0)/TIMEOUT"];
	s13 -> s13[label="FIN+ACK(V,V,0)/ACK(NEXT,CURRENT,0)"];
	s13 -> s13[label="SYN(V,V,0)/ACK(NEXT,CURRENT,0)"];
	s13 -> s13[label="RCV/TIMEOUT"];
	s14 [shape="circle" label="s14"];
	s14 -> s1[label="ACK+RST(V,V,0)/TIMEOUT"];
	s14 -> s14[label="CLOSE/TIMEOUT"];
	s14 -> s14[label="CONNECT/TIMEOUT"];
	s14 -> s5[label="ACK+PSH(V,V,1)/TIMEOUT"];
	s14 -> s14[label="SYN+ACK(V,V,0)/ACK(NEXT,CURRENT,0)"];
	s14 -> s1[label="RST(V,V,0)/TIMEOUT"];
	s14 -> s5[label="ACK(V,V,0)/TIMEOUT"];
	s14 -> s5[label="FIN+ACK(V,V,0)/TIMEOUT"];
	s14 -> s14[label="SYN(V,V,0)/TIMEOUT"];
	s14 -> s14[label="RCV/TIMEOUT"];
	__start0 -> s0;
}
